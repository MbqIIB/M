BROKER SCHEMA esqls.searchclaims
DECLARE ns20 NAMESPACE 'http://schemas.datacontract.org/2004/07/MetLife.BUC.Application.DTO.ACORD';


CREATE COMPUTE MODULE SearchClaims_esql_ValidateSearchClaims
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE CLAIMID CHARACTER;
		DECLARE CARDY, CARDY1 INTEGER;
	 	DECLARE rIn REFERENCE TO InputRoot.XMLNSC.ns13:SearchClaimsResponse.ns13:SearchClaimsResult;
		SET CARDY = CARDINALITY(InputRoot.XMLNSC.ns13:SearchClaimsResponse.ns13:SearchClaimsResult[]);
        SET CARDY1 = CARDINALITY(InputRoot.XMLNSC.ns13:SearchClaimsResponse.ns13:SearchClaimsResult.ns20:Claim[]);
        
		IF CARDY > 0 AND CARDY1 > 0 THEN
	 		SET Environment.Resultado.SearchClaims.Claims[] = InputRoot.XMLNSC.ns13:SearchClaimsResponse.ns13:SearchClaimsResult.ns20:Claim[];
		ELSE

			SET OutputRoot.JSON.Data.error.code = 202;
			SET OutputRoot.JSON.Data.error.message = 'NoDataFound';

			CREATE FIELD OutputRoot.JSON.Data.error.errors IDENTITY(JSON.Array)errors;
			SET OutputRoot.JSON.Data.error.errors.Item[1].reason = 'NoMatchFound';
			SET OutputRoot.JSON.Data.error.errors.Item[1].fieldList = '';
			SET OutputRoot.JSON.Data.error.errors.Item[1].fieldList TYPE = JSON.Array;
			PROPAGATE TO TERMINAL 'out1';
			RETURN FALSE;        
        


		END IF;		




		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;